{
    "openapi": "3.0.2",
    "info": {
        "title": "My Cookery Book 2 - backend",
        "version": "0.0.1",
        "license": {
            "name": "MIT"
        },
        "description": "This is rest api application backend developed on NodeJS and ExpressJS. Writen in typescript.",
        "contact": {
            "email": "tfilosk@gmail.com",
            "name": "Tomáš Filo",
            "url": "https://github.com/tfilo/my-cookery-book-2"
        }
    },
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "DEV"
        },
        {
            "url": "http://localhost:8080/api",
            "description": "DEV - backend in docker"
        },
        {
            "url": "http://localhost/api",
            "description": "PROD"
        }
    ],
    "tags": [
        {
            "name": "auth",
            "description": "Endpoint for authentication and changing password."
        },
        {
            "name": "category",
            "description": "Endpoint for categories administration."
        },
        {
            "name": "picture",
            "description": "Endpoint for pictures administration."
        },
        {
            "name": "recipe",
            "description": "Endpoint for recipe administration."
        },
        {
            "name": "tag",
            "description": "Endpoint for tags administration."
        },
        {
            "name": "unit",
            "description": "Endpoint for units administration."
        },
        {
            "name": "unitCategory",
            "description": "Endpoint for unit categories administration."
        },
        {
            "name": "user",
            "description": "Endpoint for users administration."
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "operationId": "health",
                "security": [],
                "responses": {
                    "200": {
                        "description": "ok"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "operationId": "login",
                "tags": ["auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "operationId": "refreshToken",
                "tags": ["auth"],
                "security": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["refreshToken"],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "format": "bearer"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful token refresh",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/password": {
            "patch": {
                "operationId": "updatePassword",
                "tags": ["auth"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdatePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Successful password update"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/auth/user": {
            "get": {
                "operationId": "user",
                "tags": ["auth"],
                "responses": {
                    "200": {
                        "description": "Authenticated user info",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticatedUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }             
            }
        },
        "/category": {
            "get": {
                "operationId": "getCategories",
                "tags": ["category"],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SimpleCategory"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }                
            },
            "post": {
                "operationId": "createCategory",
                "tags": ["category"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/category/{categoryId}": {
            "get": {
                "operationId": "getCategory",
                "tags": ["category"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Single category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "operationId": "updateCategory",
                "tags": ["category"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/components/responses/ConstraintError"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "delete": {
                "operationId": "deleteCategory",
                "tags": ["category"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "categoryId",
                        "schema": {
                            "type": "integer",
                            "format": "int32",
                            "minimum": 1
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Category deleted"
                    },
                    "401": {
                        "$ref": "#/components/responses/UnauthorizedError"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "422": {
                        "$ref": "#/components/responses/UnprocessableEntity"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/picture/byRecipe": {
            "get": {
                "operationId": "getPicturesByRecipe",
                "tags": ["picture"] 
            }
        },
        "/picture/thumbnail/{pictureId}": {
            "get": {
                "operationId": "getPictureThumbnail",
                "tags": ["picture"] 
            }
        },
        "/picture/data/{pictureId}": {
            "get": {
                "operationId": "getPictureData",
                "tags": ["picture"]                 
            }
        },
        "/picture/upload": {
            "post": {
                "operationId": "uploadPicture",
                "tags": ["picture"] 
            }
        },
        "/recipe": {
            "post": {
                "operationId": "createRecipe",
                "tags": ["recipe"] 
            }
        },
        "/recipe/find": {
            "post": {
                "operationId": "findRecipes",
                "tags": ["recipe"]                 
            }
        },
        "/recipe/{recipeId}": {
            "get": {
                "operationId": "getRecipe",
                "tags": ["recipe"]                 
            },
            "put": {
                "operationId": "updateRecipe",
                "tags": ["recipe"]                 
            },
            "delete": {
                "operationId": "deleteRecipe",
                "tags": ["recipe"] 
            }
        },
        "/tag": {
            "get": {
                "operationId": "getTags",
                "tags": ["tag"]                 
            },
            "post": {
                "operationId": "createTag",
                "tags": ["tag"]                  
            }
        },
        "/tag/{tagId}": {
            "get": {
                "operationId": "getTag",
                "tags": ["tag"]                  
            },
            "put": {
                "operationId": "updateTag",
                "tags": ["tag"]  
            },
            "delete": {
                "operationId": "deleteTag",
                "tags": ["tag"]  
            }
        },
        "/unit": {
            "post": {
                "operationId": "createUnit",
                "tags": ["unit"]   
            }
        },
        "/unit/byUnitCategory/{unitCategoryId}": {
            "get": {
                "operationId": "getUnitsByUnitCategory",
                "tags": ["unit"]  
            }
        },
        "/unit/{unitId}": {
            "get": {
                "operationId": "getUnit",
                "tags": ["unit"]                  
            },
            "put": {
                "operationId": "updateUnit",
                "tags": ["unit"]                  
            },
            "delete": {
                "operationId": "deleteUnit",
                "tags": ["unit"]  
            }
        },
        "/unitCategory": {
            "get": {
                "operationId": "deleteUnit",
                "tags": ["unitCategory"]  
            },
            "post": {
                "operationId": "deleteUnit",
                "tags": ["unitCategory"]  
            }
        },
        "/unitCategory/{unitCategoryId}": {
            "get": {
                "operationId": "getUnitCategory",
                "tags": ["unitCategory"]  
            },
            "put": {
                "operationId": "updateUnitCategory",
                "tags": ["unitCategory"]  
            },
            "delete": {
                "operationId": "deleteUnitCategory",
                "tags": ["unitCategory"]  
            }
        },
        "/user": {
            "post": {
                "operationId": "createUser",
                "tags": ["user"]                 
            }
        },
        "/user/all": {
            "get": {
                "operationId": "getUsers",
                "tags": ["user"]                 
            }
        },
        "/user/{userId}": {
            "get": {
                "operationId": "getUser",
                "tags": ["user"] 
            },
            "put": {
                "operationId": "updateUser",
                "tags": ["user"] 
            },
            "delete": {
                "operationId": "deleteUser",
                "tags": ["user"] 
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "RoleEnum": {
                "type": "string",
                "enum": ["ADMIN", "CREATOR"]
            },
            "SortOrderEnum": {
                "type": "string",
                "enum": ["ASC", "DESC"]
            },
            "ErrorTypeEnum": {
                "type": "string",
                "enum": [
                    "GENERAL_ERROR",
                    "DATABASE_ERROR",
                    "NOT_FOUND",
                    "VALIDATION_FAILED",
                    "INVALID_CREDENTIALS",
                    "FORBIDEN",
                    "EXPIRED_TOKEN",
                    "INVALID_TOKEN",
                    "UNIQUE_CONSTRAINT_ERROR",
                    "ACCOUNT_DOESNT_EXIST",
                    "UNABLE_TO_SENT_REG_EMAIL",
                    "EMAIL_IN_USE",
                    "CONSTRAINT_FAILED",
                    "CONTRACT_OVERLAP"
                ]
            },
            "LoginRequest": {
                "type": "object",
                "required": ["username", "password"],
                "properties": {
                    "username": {
                        "type": "string",
                        "maxLength": 50
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255
                    }
                }
            },
            "TokenResponse": {
                "type": "object",
                "required": ["token", "refreshToken"],
                "properties": {
                    "token": {
                        "type": "string",
                        "format": "bearer"
                    },
                    "refreshToken": {
                        "type": "string",
                        "format": "bearer"
                    }
                }
            },
            "UpdatePasswordRequest": {
                "type": "object",
                "required": ["password", "newPassword"],
                "properties": {
                    "password": {
                        "type": "string",
                        "format": "password",
                        "maxLength": 255,
                        "description": "Old password to verify this user"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8,
                        "maxLength": 255,
                        "description": "New password for user. Should be at least 8 characters long, at least one small letter, one capital letter and one number."
                    }
                }
            },
            "AuthenticatedUser": {
                "type": "object",
                "required": [
                    "username",
                    "firstName",
                    "lastName"
                ],
                "properties": {
                    "username": {
                        "type": "string",
                        "minLength": 4,
                        "maxLength": 50
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 50
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 3,
                        "maxLength": 50
                    }
                }
            },
            "SimpleCategory": {
                "type": "object",
                "required": ["id", "name"],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                }
            },
            "CreateCategory": {
                "type": "object",
                "required": ["name"],
                "properties": {
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    }
                }
            },
            "UpdateCategory": {
                "type": "object",
                "$ref": "#/components/schemas/CreateCategory"
            },
            "Category": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "createdAt",
                    "updatedAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 1
                    },
                    "name": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 50
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-04-10T12:58:33.592Z"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": ["code"],
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "code": {
                        "$ref": "#/components/schemas/ErrorTypeEnum"
                    },
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Access token is missing or invalid. Possibly incorrect credentials.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Object is missing, or required parent doesn't exists.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "General error. Something went wrong on server side.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "UnprocessableEntity": {
                "description": "Request can't be processed because validation failed.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ServiceUnavailableError": {
                "description": "Request can't be processed because mail service failed.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            },
            "ConstraintError": {
                "description": "Constraint or duplicity error.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}
